pipeline {
    agent any // Or specify a specific agent label if using multiple agents

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/srinidhinsn/saas.git -b backend-dev' // Replace with your repository URL
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install -r fastapi uvicorn psycopg2-binary sqlalchemy alembic passlib bcrypt python-jose setuptools pytest httpx' // Install project dependencies
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest' // Or your chosen testing command (e.g., `python -m unittest discover`)
            }
        }

      //  stage('Run Migrations (if applicable)') {
      //      steps {
      //          sh 'python your_app/manage.py migrate' // If using a database with migrations
      //      }
      //  }

        stage('Deploy') {
            steps {
                // Stop existing application process (e.g., Uvicorn, Gunicorn)
                sh 'sudo systemctl stop user-service' // Replace with your service name

                // Copy application files to deployment location
                sh 'sudo cp -r . /user-service/' // Replace with your deployment path

                // Start the application
                sh 'sudo systemctl start user-service' // Replace with your service name
            }
        }
    }

    post {
        always {
            // Optional: Clean up workspace or send notifications
            cleanWs()
        }
        failure {
            // Optional: Send failure notifications
            echo 'Pipeline failed!'
        }
        success {
            // Optional: Send success notifications
            echo 'Pipeline completed successfully!'
        }
    }
}
